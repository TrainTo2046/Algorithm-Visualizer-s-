Dijkstra Algorithm peusocode

T: O(E + VlogV)
S: O(E + V)
input: Graph G = (V, E),
        positive edge lengths

dist = {}
for node in G:
  dist[node] = inf

start = s, dist[s] = 0, visited = []

heap = []
heap.push((0, start))
while heap:
  value, node = heap.pop()
  if node in visited: continue
  
  visited.append(node)
  # get all outgoing nodes
  lst = G[node]
  for edge in lst:
    # edge_dis = dist from node to edge
    edge_dis = G[node][edge]
    # value = min dist from start to edge
    value = 
    min(dist[edge], dist[node] + edge_dis)
    dist[edge] = value
    heap.push((value, edge))
return dist