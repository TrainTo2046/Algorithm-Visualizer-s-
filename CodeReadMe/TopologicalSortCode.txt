Topological sort pseudocode

T: O(V + E)
S: O(V + E)

# Assumption: graph is stored as 
  adjacency list
funnction topsort(graph):
  N = graph.numberOfNodes()
  V = [false, ..., false] # Length N
  ordering = [0, ..., 0] # Length N
  i = N - 1 # Index for ordering array

  for (at = 0; at < N; at++):
    if V[at] == false:
      i = dfs(i, at, V, ordering, graph)
  
  return ordering

# dfs
function dfs(i, at, V, ordering, graph):
  V[at] = true

  edges = 
    graph.getEdgesOutFromNode(at)
  for edge in edges:
    if V[edge.to] == false:
      i = dfs(i, edge.to, V, ordering, 
              graph)
  ordering[i] = at
  return i - 1