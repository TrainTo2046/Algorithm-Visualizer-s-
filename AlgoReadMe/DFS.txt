Depth First Search (USES STACK)

Tree/ Graph Traversal

graph = {a :[b, c], b :[d, e], ...}, 
visited = [],   stack = []

Step 1: add starting node to stack 
        add starting node to visited
Step 2: while stack not empty,
        pop value from stack
        value = stack.pop()
Step 3: get list from graph
        list = graph[value]
Step 4: for each node in list
        if not in visited:
            -> add to visited
            -> push to stack

graph = {   0 : [1, 2],   1 : [0, 2],   
            2 : [0,1,3],  3 : [2]   }
visited = [], stack = [], start = 0
1) stack = [0], visited = [0]
2) value = 0 -> graph[0] = [1, 2]
    stack = [1, 2], visited = [0, 1, 2]
3) value = 1 -> graph[1] = [0, 2]
    stack = [2], visited = [0, 1, 2]
4) value = 2 -> graph[2] =  [0, 1, 3]
    stack = [3], visited = [0, 1, 2]
5) value = 3 -> graph[3] = [2]
    stack = [], visited = [0, 1, 2, 3]